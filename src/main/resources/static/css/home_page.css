@charset "UTF-8";

:root {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 16px;
    --mainText: Verdana, Geneva, Tahoma, sans-serif;
    --primaryColor: #3aafa9;
    --secondaryColor: #2c7b79;
    --thirdColor: #17252a;
    --bgkColor: #ffff;
    --nonImportantText: #727F83;
    --textColor: black;
    --boxShadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
    --boxShadowPopUp: 0 0 5px rgb(0, 0, 0, .2);
    --colorSchema: light;
    --borderBoxShadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
}

h3,
h2 {
    font-family: var(--mainText);
    color: var(--textColor);
}


::placeholder {
    color: var(--nonImportantText);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

a,
p {
    color: var(--secondaryColor);
    text-decoration: none;
}


/* ******* */
.btn1div {
    position: relative;
    text-align: center;
    margin: 1.8em 0;
}

.btn1div>input[type="checkbox"] {
    cursor: pointer;
    position: relative;
    width: 5em;
    height: 2.5em;
    appearance: none;
    -webkit-appearance: none;
    /* need to set appearance:  to none to be able to change background color ; */
    background-color: var(--primaryColor);
    outline: none;
    border-radius: 1.25em;
    transition: 0s;
    /* if u change transtiotion from .0s to a number it will make a form that changes hoe the input is added */
}

.btn1div>input:checked[type="checkbox"] {
    background-color: var(--primaryColor);
}

.btn1div>input[type="checkbox"]:before {
    content: "";
    position: absolute;
    width: 1.8em;
    height: 1.8em;
    border-radius: 50%;
    top: .3em;
    left: .6em;
    background-color: var(--bgkColor);
    transform: scale(1.1);
    box-shadow: 0 .1em .3em rgba(0, 0, 0, 0.2);
    transition: 0.5s;
}

.btn1div>input:checked[type="checkbox"]::before {
    background-color: var(--secondaryColor);
}

.btn1div>input:checked[type="checkbox"]:before {
    left: 2.5em;
}

/* check box customize */
.repeatCheckbox {
    margin: .9em;
    width: 100%;
    display: flex;
    justify-content: flex-start;
    align-items: center;
}

.checkBoxLabel {
    width: 3.1em;
    height: 1.5em;
    cursor: pointer;
    margin: 0 .6em;
}

/* ****** end */

#mainContainer {
    margin: 0px auto;
    width: 60rem;
    height: auto;
    opacity: 1;
}

.columnContainer {
    margin-top: .9em;
    display: flex;
    justify-content: space-evenly;
}

.columnLeft {
    height: auto;
    width: 60%;
}

.row1 {
    height: auto;
    width: 100%;
    display: flex;
    justify-content: center;
}

/* calendar css is in its own file */
.row2 {
    margin-top: .9em;
    height: auto;
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: center;
}

.selectedCategoryContainer {
    width: 95%;
    height: auto;
    border-radius: 1.25em;
    background-color: var(--bgkColor);
    box-shadow: var(--boxShadow);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

.selectedCategoryName {
    margin-top: .9em;
    width: 100%;
    height: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

/* no task p for cat  */
.notaskParagraph {
    color: var(--nonImportantText);
    font-size: .75rem;
    margin: 1.5em 0;
}

.tasksList {
    width: 100%;
    height: auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}


/* for checkbox tasks */
.checkmark {
    margin-left: .93em;
    background-size: 0%;
    transition: background-size .8s ease;
}

.checkBoxLabel .checkmark {
    border-radius: .62em;
    width: 1.3em;
    height: 1.3em;
    border: .1em solid var(--textColor);
    display: block;
}

.checkBoxLabel>input {
    display: none;
}

.checkBoxLabel>input+.checkmark {
    background-color: var(--bgkColor);
}

/* complete task */
.checkBoxLabel>input:checked+.--taskFormComplete {
    background-size: 100%;
    background: black url('https://portfolio-avis-s3.s3.amazonaws.com/app/icons/white_checkMark_img.svg') center/140% no-repeat;
    transition: background-size .8s ease cubic-bezier(0.25, 0.1, 1, 5.68);
    background-color: var(--nonImportantText);
}

.taskParagraph {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-left: .62em;
}

.--taskComplete {
    text-decoration: line-through;
    color: var(--nonImportantText);
}


/* end row 2 */
.columnRight {
    height: auto;
    width: 40%;
    display: inline-block;
}

.dashboard {
    box-shadow: var(--boxShadow);
    width: 95%;
    height: auto;
    border-radius: 1.25em;
    background-color: var(--bgkColor);
    display: flex;
    flex-direction: column;
}

.rowDashNav {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    margin-bottom: 1.5em;
}

.rowDashNav>img {
    height: 7.8em;
    width: 6.25em;
}

.userActions>a {
    font-size: .75rem;
    margin-top: .9em;
}

.rowRepeatContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin-bottom: 1.5em;
}

.rowRepeat {
    height: 1.5em;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    cursor: pointer;
}

.rowRepeat :hover {
    transform: scale(1.2);
}

.rowRepeat>p {
    font-size: 1.1rem;
}

.currentCatArrow {
    height: 1em;
    width: 1em;
}

.retrieveDataBtn {
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
}

/* form styles */
form {
    display: flex;
    flex-direction: column;
}

.input {
    color-scheme: var(--colorSchema);
    border: none;
    margin-top: 1.25em;
    width: 21.8em;
    height: 3.1em;
    padding-left: .9em;
    background: transparent;
    border-bottom: .05em solid var(--textColor);
    outline: none;
    color: var(--textColor);
}

#btn {
    margin-top: 2em;
    background-color: var(--secondaryColor);
    padding: .3em;
    width: 7.5em;
    height: 2.5em;
    border-radius: 3.1em;
    align-self: center;
    color: white;
    border: none;
    cursor: pointer;
}

/* loading display */
.loader {
    display: none;
}

.loader.show {
    height: auto;
    width: auto;
    padding: .3em .62em;
    overflow: hidden;
    background-color: var(--bgkColor);
    box-shadow: var(--boxShadow);
    position: fixed;
    top: 90%;
    display: flex;
    align-items: center;
    border-top-right-radius: 1.25em;
    border-bottom-right-radius: 1.25em;
}

.loader>div {
    height: 1.25em;
    width: 1.25em;
    border: .25em solid var(--textColor);
    border-top-color: var(--primaryColor);
    border-radius: 50%;
    animation: spin 1.5s infinite linear;
    margin-right: .3em;
}

.loaderP {
    white-space: nowrap;
    color: var(--textColor);
}

@keyframes spin {
    100% {
        transform: rotate(360deg);
    }
}

footer {
    margin-top: 15em;
    text-align: center;
}
#linkImg {
    position: absolute;
    top: 4.2vh;
    left: 82vw;
    cursor: pointer;
    background-color: white;
    height: 2.3rem;
    width: 2.3rem;
    padding: 5px;
    border-radius: 50px;
    box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,
      rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
  }
  
@media (max-width: 780px) {
    #mainContainer {
        width: 96%;
    }

    .columnContainer {
        margin-top: .9em;
        justify-content: space-between;
    }

    .columnLeft {
        width: 55%;
    }

    .columnRight {
        width: 45%;
        display: flex;
        justify-content: end;
    }

    .row2 {
        margin-top: 0;
    }

    .shownTaskHeader {
        font-size: 1rem;
    }

    .retrieveDataBtn {
        margin-top: 1.1rem;
    }

    .rowRepeat>p {
        font-size: 1.2rem;
    }

    .notaskParagraph {
        text-align: center;
    }

    .selectedCategoryContainer {
        width: 100%;
    }

    .userActions>a {
        font-size: 1rem;
    }
 
}